var FlickityTransformer=function(){"use strict";function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var index=createCommonjsModule(function(module){var name="polylinearScale";var config={};function polylinearScale(domain,range,clamp){domain=domain||[0,1];range=range||[0,1];clamp=clamp||false;if(domain.length!==range.length){throw new Error(name+" requires domain and range to have an equivalent number of values")}config.domain=domain;config.range=range;config.clamp=clamp;return scale}function scale(value){var domains=config.domain;var ranges=config.range;var domain;var range;var ratio;var result;var i=0;while(i<domains.length-1){if(value>=domains[i]&&value<=domains[i+1]){domain=[domains[i],domains[i+1]],range=[ranges[i],ranges[i+1]];break}i++}if(domain===undefined){if(value<domains[0]){domain=[domains[0],domains[1]];range=[ranges[0],ranges[1]]}else{domain=[domains[domains.length-2],domains[domains.length-1]];range=[ranges[ranges.length-2],ranges[ranges.length-1]]}}ratio=(range[1]-range[0])/(domain[1]-domain[0]);result=range[0]+ratio*(value-domain[0]);if(config.clamp){var rangeMin=Math.min(range[0],range[1]);var rangeMax=Math.max(range[0],range[1]);result=Math.min(rangeMax,Math.max(rangeMin,result))}return result}module.exports.name=name;module.exports=polylinearScale});var units={perspective:"px",rotate:"deg",rotateY:"deg",translateX:"px",translateY:"px"};var flickity={};var transforms=[];var cellElements=[];var FlickityTransformer=function FlickityTransformer(flkty,opts){if(arguments.length<2){throw new Error("FlickityTransformer requires two parameters")}if(opts.transforms===undefined){throw new Error("FlickityTransformer requires the second parameter contain a `transforms` array")}flickity=flkty;transforms=opts.transforms;cellElements=flickity.getCellElements();init()};function init(){createScaleFunctions();flickity.slides.forEach(applyTransforms);flickity.on("scroll",function(){flickity.slides.forEach(applyTransforms)});if(flickity._events.scroll===undefined){throw new Error("FlickityTransformer requires the first parameter to be a instance of Flickity that supports the `scroll` event (version 2+)")}window.addEventListener("resize",function(){flickity.slides.forEach(applyTransforms)})}function createScaleFunctions(){transforms.forEach(function(transform){var domain=[];var range=[];transform.stops.forEach(function(stop){domain.push(stop[0]);range.push(stop[1])});transform.scale=function(value){return index(domain,range,true)(value)}})}function applyTransforms(slide,i){var el=cellElements[i];var txs=[];var xPos=void 0;xPos=slide.parent.x<0?slide.target-Math.abs(slide.parent.x):slide.target+slide.parent.x;transforms.forEach(function(transform){txs.push(makeTransform(transform,xPos))});el.style.transform=txs.join(" ")}function makeTransform(transform,xPos){var name=transform.name;var unit=units[name]||"";var tx=transform.scale(xPos);return"FlickityTransformer("+tx+unit+")"}return FlickityTransformer}();